-- The four cardinal directions.
DROP TYPE IF EXISTS cardinal_direction CASCADE;
CREATE TYPE cardinal_direction AS ENUM('▶', '▲', '◀', '▼');

-- Compute absolute difference between two angles (which is trivial in most
-- cases but not when the two angles cross 0, e.g. when alpha = 350 and beta =
-- 10) given in degrees using the formula atan2(sin(a-b), cos(a-b)) as per
-- https://stackoverflow.com/a/2007279.
DROP FUNCTION IF EXISTS angdiff;
CREATE OR REPLACE FUNCTION angdiff(alpha double precision,
                                   beta double precision) RETURNS real AS $$
  SELECT abs(degrees(atan2(sin(radians(alpha - beta)),
                           cos(radians(alpha - beta))))) :: real;
$$ LANGUAGE SQL IMMUTABLE;

-- Compute position on 4x4 grid from an (x,y) coordinate pair. Used during
-- assembly of features table.
DROP FUNCTION IF EXISTS gridpos;
CREATE OR REPLACE FUNCTION gridpos(width real, height real,
                                   xmin real, ymin real,
                                   x real, y real) RETURNS int AS $$
  SELECT greatest(0,
                  15 - (      (floor(4 * (x - xmin) / (width  + 1)) :: int)
                        + 4 * (floor(4 * (y - ymin) / (height + 1)) :: int)));
$$ LANGUAGE SQL IMMUTABLE;

-- Initial lookup table: Maps an array of up to four starting directions of a
-- stroke to a set of potential characters. Largely taken from the essay
-- implementation with some minor improvements.
DROP TABLE IF EXISTS lookup1;
CREATE TABLE lookup1 (
  first_four_directions cardinal_direction[],
  candidate_character   char
);
INSERT INTO lookup1 VALUES
  ('{"▼"}',             'I'),
  ('{"▼","◀"}',         'J'),
  ('{"▼","◀","▲"}',     'O'),
  ('{"▼","◀","▲"}',     'J'),
  ('{"▼","◀","▲"}',     'X'),
  ('{"▼","◀","▲"}',     'U'),
  ('{"▼","◀","▲","▶"}', 'X'),
  ('{"▼","◀","▲","▶"}', 'O'),
  ('{"▼","◀","▲","▶"}', 'U'),
  ('{"▼","◀","▶"}',     'X'),
  ('{"▼","◀","▶","▲"}', 'X'),
  ('{"▼","▶"}',         'L'),
  ('{"▼","▶","◀"}',     '6'),
  ('{"▼","▶","◀","▼"}', '4'),
  ('{"▼","▶","▲"}',     'O'),
  ('{"▼","▶","▲"}',     'U'),
  ('{"▼","▶","▲","▼"}', '4'),
  ('{"▼","▶","▲","▼"}', 'Y'),
  ('{"▼","▶","▲","◀"}', '6'),
  ('{"▼","▶","▲","◀"}', '8'),
  ('{"▼","▶","▲","◀"}', 'O'),
  ('{"▼","▶","▲","◀"}', 'D'),
  ('{"▼","▶","▲","◀"}', '4'),
  ('{"▼","▶","▲","▶"}', '8'),
  ('{"▼","▲"}',         'V'),
  ('{"▼","▲"}',         'U'),
  ('{"▼","▲","▼"}',     'K'),
  ('{"▼","▲","▼","▲"}', 'W'),
  ('{"▼","▲","▼","▶"}', 'W'),
  ('{"▼","▲","▼","▶"}', 'K'),
  ('{"▼","▲","▶","▼"}', 'H'),
  ('{"◀","▼"}',         'F'),
  ('{"◀","▼","◀"}',     'S'),
  ('{"◀","▼","◀","▼"}', 'E'),
  ('{"◀","▼","▶","◀"}', 'E'),
  ('{"◀","▼","▶","◀"}', '6'),
  ('{"◀","▶","▼"}',     'T'),
  ('{"◀","▶","▼","◀"}', 'S'),
  ('{"◀","▶","▼","◀"}', '8'),
  ('{"◀","▶","▼","▶"}', 'E'),
  ('{"◀","▶","◀"}',     'S'),
  ('{"◀","▶","◀","▼"}', 'E'),
  ('{"◀","▶","◀","▶"}', 'E'),
  ('{"◀","▼","▶"}',     'C'),
  ('{"◀","▼","▶","▼"}', '5'),
  ('{"◀","▼","▶","▼"}', '8'),
  ('{"◀","▼","▶","▼"}', 'S'),
  ('{"◀","▼","▶","▼"}', 'E'),
  ('{"◀","▼","▶","▲"}', '6'),
  ('{"◀","▼","▶","▲"}', 'O'),
  ('{"◀","▼","▶","▲"}', 'C'),
  ('{"◀","▼","▶","▲"}', 'G'),
  ('{"◀","▼","▶","▲"}', '9'),
  ('{"◀","▲","▶","▼"}', '9'),
  ('{"◀","▲","▶","▼"}', '8'),
  ('{"◀","▲","▶","▼"}', 'Q'),
  ('{"▶","◀","▼"}',     '7'),
  ('{"▶","◀","▼","▶"}', '3'),
  ('{"▶","◀","▼","▶"}', '2'),
  ('{"▶","◀","▼","▶"}', 'Z'),
  ('{"▶","◀","▶","◀"}', '3'),
  ('{"▶","◀","▶"}',     '2'),
  ('{"▶","◀","▶"}',     'Z'),
  ('{"▶","◀","▶","▼"}', '3'),
  ('{"▶","▼"}',         '7'),
  ('{"▶","▼"}',         '1'),
  ('{"▶","▼","◀"}',     '7'),
  ('{"▶","▼","◀"}',     '3'),
  ('{"▶","▼","◀","▼"}', '2'),
  ('{"▶","▼","◀","▼"}', '3'),
  ('{"▶","▼","◀","▲"}', 'O'),
  ('{"▶","▼","◀","▲"}', '2'),
  ('{"▶","▼","◀","▲"}', '3'),
  ('{"▶","▼","◀","▲"}', 'U'),
  ('{"▶","▼","◀","▲"}', 'X'),
  ('{"▶","▼","▶","▼"}', '3'),
  ('{"▶","▼","▶"}',     '2'),
  ('{"▶","▼","▶"}',     'Z'),
  ('{"▶","▼","◀","▶"}', '3'),
  ('{"▶","▼","◀","▶"}', '2'),
  ('{"▶","▼","◀","▶"}', 'Z'),
  ('{"▲"}',             'I'),
  ('{"▲","▼"}',         '1'),
  ('{"▲","▼"}',         'A'),
  ('{"▲","▼","◀"}',     'A'),
  ('{"▲","▼","◀","▲"}', 'A'),
  ('{"▲","▼","▶"}',     '2'),
  ('{"▲","▼","▲"}',     'N'),
  ('{"▲","▼","▲"}',     'A'),
  ('{"▲","▼","▲","◀"}', 'A'),
  ('{"▲","▼","▲","▼"}', 'M'),
  ('{"▲","▼","▲","▼"}', 'N'),
  ('{"▲","▼","▲","▶"}', 'M'),
  ('{"▲","▼","▲","▶"}', 'N'),
  ('{"▲","▼","▶","▲"}', 'M'),
  ('{"▲","▼","▶","▲"}', 'N'),
  ('{"▲","▼","▶","▼"}', 'M'),
  ('{"▲","▼","▶","▼"}', 'N'),
  ('{"▲","▶","▲"}',     'M'),
  ('{"▲","▶","▲"}',     'N'),
  ('{"▲","▶","▲","▼"}', 'M'),
  ('{"▲","▶","▲","▼"}', 'N'),
  ('{"▲","▶","▼"}',     'D'),
  ('{"▲","▶","▼","▲"}', 'M'),
  ('{"▲","▶","▼","▲"}', 'N'),
  ('{"▲","▶","▼","▲"}', 'A'),
  ('{"▲","◀","▼","▶"}', '8'),
  ('{"▲","◀","▼","▶"}', '9'),
  ('{"▲","◀","▼","▶"}', 'C'),
  ('{"▲","◀","▼","▶"}', 'G'),
  ('{"▲","◀","▼","▶"}', 'S'),
  ('{"▲","◀","▼","▶"}', '6'),
  ('{"▲","◀","▶"}',     'T'),
  ('{"▲","▶","▼","▶"}', '2'),
  ('{"▲","▶","▼","▶"}', '3'),
  ('{"▲","▶","▼","▶"}', '8'),
  ('{"▲","▶","▼","▶"}', 'B'),
  ('{"▲","▶","▼","▶"}', 'D'),
  ('{"▲","▶","▼","▶"}', 'P'),
  ('{"▲","▶","▼","▶"}', 'R'),
  ('{"▲","▶","▼","◀"}', '2'),
  ('{"▲","▶","▼","◀"}', '3'),
  ('{"▲","▶","▼","◀"}', '8'),
  ('{"▲","▶","▼","◀"}', 'B'),
  ('{"▲","▶","▼","◀"}', 'D'),
  ('{"▲","▶","▼","◀"}', 'P'),
  ('{"▲","▶","▼","◀"}', 'R'),
  ('{"▲","▶","◀","▶"}', 'B'),
  ('{"▲","▶"}',         'F'),
  ('{"▲","▶","◀"}',     'D'),
  ('{"▲","▶","◀","▲"}', 'F');

-- Final lookup table: Narrows result of initial lookup down based on extracted
-- features. Not taken from the essay implementation.
DROP TABLE IF EXISTS lookup2;
CREATE TABLE lookup2 (
  character            char,
  start                int,
  stop                 int,
  corners              int[],
  last_direction       cardinal_direction,
  aspect_range         numrange
);
INSERT INTO lookup2 VALUES
  ('O', 0, 0, NULL, NULL, NULL),
  ('O', 1, 1, NULL, NULL, NULL),
  ('O', 2, 2, NULL, NULL, NULL),
  ('O', 3, 3, NULL, NULL, NULL),
  ('J', NULL, 11, NULL, NULL, NULL),
  ('J', NULL, 15, NULL, NULL, NULL),
  ('X', 3, 0, '{12,15}', NULL, NULL),
  ('X', 3, 0, '{12}', NULL, NULL),
  ('X', 3, 0, '{15}', NULL, NULL),
  ('U', 0, 3, NULL, NULL, NULL),
  ('X', 3, 0, '{12,15}', NULL, NULL),
  ('X', 3, 0, '{12}', NULL, NULL),
  ('X', 3, 0, '{15}', NULL, NULL),
  ('O', 0, 0, NULL, NULL, NULL),
  ('O', 1, 1, NULL, NULL, NULL),
  ('O', 2, 2, NULL, NULL, NULL),
  ('O', 3, 3, NULL, NULL, NULL),
  ('U', 0, 3, NULL, NULL, NULL),
  ('O', 0, 0, NULL, NULL, NULL),
  ('O', 1, 1, NULL, NULL, NULL),
  ('O', 2, 2, NULL, NULL, NULL),
  ('O', 3, 3, NULL, NULL, NULL),
  ('U', 3, 0, NULL, NULL, NULL),
  ('U', 3, 4, NULL, NULL, NULL),
  ('U', 7, 0, NULL, NULL, NULL),
  ('4', NULL, 12, NULL, NULL, NULL),
  ('4', NULL, 13, NULL, NULL, NULL),
  ('Y', NULL, 14, NULL, NULL, NULL),
  ('Y', NULL, 15, NULL, NULL, NULL),
  ('Y', NULL, 11, NULL, NULL, NULL),
  ('6', 0, 6, NULL, NULL, NULL),
  ('6', 0, 7, NULL, NULL, NULL),
  ('6', 0, 11, NULL, NULL, NULL),
  ('6', 1, 6, NULL, NULL, NULL),
  ('6', 1, 7, NULL, NULL, NULL),
  ('6', 1, 11, NULL, NULL, NULL),
  ('8', 5, 5, NULL, NULL, NULL),
  ('8', 6, 6, NULL, NULL, NULL),
  ('8', 9, 9, NULL, NULL, NULL),
  ('8', 10, 10, NULL, NULL, NULL),
  ('O', 0, 0, '{}', NULL, NULL),
  ('O', 1, 1, NULL, NULL, NULL),
  ('O', 2, 2, NULL, NULL, NULL),
  ('O', 3, 3, NULL, NULL, NULL),
  ('D', 0, 0, '{15}', NULL, NULL),
  ('4', NULL, 12, NULL, NULL, NULL),
  ('4', NULL, 13, NULL, NULL, NULL),
  ('V', NULL, NULL, '{13}', NULL, NULL),
  ('V', NULL, NULL, '{14}', NULL, NULL),
  ('V', NULL, NULL, '{13,12}', NULL, NULL),
  ('V', NULL, NULL, '{13,14}', NULL, NULL),
  ('V', NULL, NULL, '{12}', NULL, NULL),
  ('U', NULL, NULL, '{}', NULL, NULL),
  ('W', NULL, 0, NULL, NULL, NULL),
  ('K', NULL, 12, NULL, NULL, NULL),
  ('E', NULL, 12, NULL, NULL, NULL),
  ('E', NULL, 13, NULL, NULL, NULL),
  ('6', NULL, 6, NULL, NULL, NULL),
  ('6', NULL, 7, NULL, NULL, NULL),
  ('6', NULL, 11, NULL, NULL, NULL),
  ('S', NULL, 15, NULL, NULL, NULL),
  ('S', NULL, 14, NULL, NULL, NULL),
  ('8', NULL, 0, NULL, NULL, NULL),
  ('8', NULL, 1, NULL, NULL, NULL),
  ('8', NULL, 2, NULL, NULL, NULL),
  ('5', 0, NULL, '{3,7}', NULL, NULL),
  ('5', 0, NULL, '{3,11}', NULL, NULL),
  ('5', 0, NULL, '{3}', NULL, NULL),
  ('5', 0, NULL, '{7}', NULL, NULL),
  ('5', 0, NULL, '{7,8}', NULL, NULL),
  ('5', 0, NULL, '{7,9}', NULL, NULL),
  ('5', 0, NULL, '{11}', NULL, NULL),
  ('5', 0, NULL, '{11,12}', NULL, NULL),
  ('8', 0, 0, NULL, NULL, NULL),
  ('8', 1, 1, NULL, NULL, NULL),
  ('8', 4, 4, NULL, NULL, NULL),
  ('S', NULL, 15, '{}', NULL, NULL),
  ('S', NULL, 14, '{}', NULL, NULL),
  ('E', NULL, 12, NULL, NULL, NULL),
  ('E', NULL, 13, NULL, NULL, NULL),
  ('6', 0, 11, '{}', NULL, NULL),
  ('6', 0, 10, '{}', NULL, NULL),
  ('O', 0, 0, NULL, NULL, NULL),
  ('O', 1, 1, NULL, NULL, NULL),
  ('O', 4, 4, NULL, NULL, NULL),
  ('O', 0, 1, NULL, NULL, NULL),
  ('O', 1, 0, NULL, NULL, NULL),
  ('C', 0, 12, NULL, NULL, NULL),
  ('C', 0, 8, NULL, NULL, NULL),
  ('C', 4, 8, NULL, NULL, NULL),
  ('C', 4, 12, NULL, NULL, NULL),
  ('C', 8, 12, NULL, NULL, NULL),
  ('G', 0, 9, NULL, NULL, NULL),
  ('G', 0, 10, NULL, NULL, NULL),
  ('G', 0, 5, NULL, NULL, NULL),
  ('9', 0, 14, NULL, NULL, NULL),
  ('9', 0, 15, NULL, NULL, NULL),
  ('9', 1, 11, NULL, NULL, NULL),
  ('9', 1, 14, NULL, NULL, NULL),
  ('9', 1, 15, NULL, NULL, NULL),
  ('9', 1, 11, NULL, NULL, NULL),
  ('9', 4, 15, NULL, NULL, NULL),
  ('9', 8, 15, NULL, NULL, NULL),
  ('8', 4, 4, NULL, NULL, NULL),
  ('8', 4, 8, NULL, NULL, NULL),
  ('8', 8, 8, NULL, NULL, NULL),
  ('8', 9, 8, NULL, NULL, NULL),
  ('8', 9, 9, NULL, NULL, NULL),
  ('8', 9, 10, NULL, NULL, NULL),
  ('Q', 13, 12, NULL, NULL, NULL),
  ('Q', 12, 12, NULL, NULL, NULL),
  ('Q', 14, 12, NULL, NULL, NULL),
  ('Q', 14, 13, NULL, NULL, NULL),
  ('3', 3, 15, NULL, NULL, NULL),
  ('3', 3, 14, NULL, NULL, NULL),
  ('2', 3, 12, '{15}', NULL, NULL),
  ('2', 3, 12, '{14}', NULL, NULL),
  ('2', 3, 13, '{15}', NULL, NULL),
  ('2', 3, 13, '{14}', NULL, NULL),
  ('2', 2, 12, '{15}', NULL, NULL),
  ('2', 2, 12, '{14}', NULL, NULL),
  ('2', 2, 13, '{15}', NULL, NULL),
  ('2', 2, 13, '{14}', NULL, NULL),
  ('2', 3, 12, '{15,14}', NULL, NULL),
  ('2', 3, 13, '{15,14}', NULL, NULL),
  ('2', 2, 12, '{15,14}', NULL, NULL),
  ('2', 2, 13, '{15,14}', NULL, NULL),
  ('Z', NULL, NULL, '{0,15}', NULL, NULL),
  ('Z', NULL, NULL, '{1,15}', NULL, NULL),
  ('Z', NULL, NULL, '{0,14}', NULL, NULL),
  ('Z', NULL, NULL, '{1,14}', NULL, NULL),
  ('Z', NULL, NULL, '{1,14,13}', NULL, NULL),
  ('Z', NULL, NULL, '{0,5,15}', NULL, NULL),
  ('2', NULL, NULL, '{14}', NULL, NULL),
  ('2', NULL, NULL, '{15}', NULL, NULL),
  ('2', NULL, NULL, '{15,14}', NULL, NULL),
  ('Z', NULL, NULL, '{0,15}', NULL, NULL),
  ('Z', NULL, NULL, '{1,15}', NULL, NULL),
  ('Z', NULL, NULL, '{0,14}', NULL, NULL),
  ('Z', NULL, NULL, '{1,14}', NULL, NULL),
  ('Z', NULL, NULL, '{1,14,13}', NULL, NULL),
  ('Z', NULL, NULL, '{0,5,15}', NULL, NULL),
  ('7', NULL, NULL, NULL, NULL, numrange(0,1.8)),
  ('1', NULL, NULL, NULL, NULL, numrange(1.8,1000)),
  ('7', NULL, NULL, '{0}', NULL, NULL),
  ('7', NULL, NULL, '{4}', NULL, NULL),
  ('3', NULL, NULL, '{}', NULL, NULL),
  ('2', NULL, 12, NULL, NULL, NULL),
  ('2', NULL, 13, NULL, NULL, NULL),
  ('3', NULL, 14, NULL, NULL, NULL),
  ('3', NULL, 15, NULL, NULL, NULL),
  ('O', 3, 3, NULL, NULL, NULL),
  ('O', 2, 2, NULL, NULL, NULL),
  ('O', 1, 1, NULL, NULL, NULL),
  ('2', NULL, NULL, '{14}', NULL, NULL),
  ('2', NULL, NULL, '{15}', NULL, NULL),
  ('3', 3, 15, NULL, NULL, NULL),
  ('3', 3, 14, NULL, NULL, NULL),
  ('U', 0, 3, '{}', NULL, NULL),
  ('X', 0, 3, '{12,15}', NULL, NULL),
  ('X', 0, 3, '{12}', NULL, NULL),
  ('X', 0, 3, '{15}', NULL, NULL),
  ('X', 0, 1, '{15}', NULL, NULL),
  ('X', 0, 1, '{12,14}', NULL, NULL),
  ('1', NULL, NULL, NULL, NULL, numrange(1.6,1000)),
  ('A', NULL, NULL, NULL, NULL, numrange(0,1.6)),
  ('N', NULL, 0, NULL, NULL, NULL),
  ('N', NULL, 1, NULL, NULL, NULL),
  ('N', NULL, 4, NULL, NULL, NULL),
  ('A', NULL, 10, NULL, NULL, NULL),
  ('A', NULL, 11, NULL, NULL, NULL),
  ('A', NULL, 6, NULL, NULL, NULL),
  ('A', NULL, 7, NULL, NULL, NULL),
  ('A', NULL, 9, NULL, NULL, NULL),
  ('M', NULL, 12, NULL, NULL, NULL),
  ('N', NULL, 0, NULL, NULL, NULL),
  ('N', NULL, 1, NULL, NULL, NULL),
  ('M', NULL, 12, NULL, NULL, NULL),
  ('N', NULL, 0, NULL, NULL, NULL),
  ('N', NULL, 1, NULL, NULL, NULL),
  ('A', NULL, 10, NULL, NULL, NULL),
  ('A', NULL, 6, NULL, NULL, NULL),
  ('A', NULL, 7, NULL, NULL, NULL),
  ('A', NULL, 9, NULL, NULL, NULL),
  ('8', 9, 9, NULL, NULL, NULL),
  ('8', 8, 8, NULL, NULL, NULL),
  ('9', 8, 11, NULL, NULL, NULL),
  ('9', 8, 14, NULL, NULL, NULL),
  ('9', 8, 15, NULL, NULL, NULL),
  ('9', 9, 11, NULL, NULL, NULL),
  ('9', 9, 14, NULL, NULL, NULL),
  ('9', 9, 15, NULL, NULL, NULL),
  ('C', 0, 12, NULL, NULL, NULL),
  ('C', 0, 8, NULL, NULL, NULL),
  ('C', 4, 8, NULL, NULL, NULL),
  ('C', 4, 12, NULL, NULL, NULL),
  ('C', 8, 12, NULL, NULL, NULL),
  ('C', 0, 13, NULL, NULL, NULL),
  ('G', 0, 9, NULL, NULL, NULL),
  ('G', 0, 5, NULL, NULL, NULL),
  ('G', 4, 9, NULL, NULL, NULL),
  ('G', 4, 5, NULL, NULL, NULL),
  ('G', 4, 14, NULL, NULL, NULL),
  ('G', 4, 13, NULL, NULL, NULL),
  ('S', 4, 11, NULL, NULL, NULL),
  ('S', 4, 15, NULL, NULL, NULL),
  ('6', 0, 11, NULL, NULL, NULL),
  ('6', 0, 10, NULL, NULL, NULL),
  ('6', 4, 10, NULL, NULL, NULL),
  ('2', NULL, NULL, '{14}', NULL, NULL),
  ('2', NULL, NULL, '{15}', NULL, NULL),
  ('3', 3, 15, NULL, NULL, NULL),
  ('3', 3, 14, NULL, NULL, NULL),
  ('3', 2, 15, NULL, NULL, NULL),
  ('8', 10, 11, NULL, NULL, NULL),
  ('8', 10, 10, NULL, NULL, NULL),
  ('8', 9, 10, NULL, NULL, NULL),
  ('8', 11, 10, NULL, NULL, NULL),
  ('B', 15, 15, '{3,7}', NULL, NULL),
  ('B', 15, 15, '{1,7}', NULL, NULL),
  ('B', 15, 15, '{3,11}', NULL, NULL),
  ('B', 15, 15, '{7}', NULL, NULL),
  ('B', 15, 15, '{6}', NULL, NULL),
  ('B', 15, 15, '{11}', NULL, NULL),
  ('B', 15, 15, '{11}', NULL, NULL),
  ('B', 15, 15, '{3,6,5}', NULL, NULL),
  ('B', 15, 15, '{3,0,6}', NULL, NULL),
  ('B', 15, 15, '{1,7,6}', NULL, NULL),
  ('B', 15, 15, '{3,0,7,6}', NULL, NULL),
  ('B', 15, 15, '{3,7,10,12}', NULL, NULL),
  ('B', 15, 15, '{3,7,10}', NULL, NULL),
  ('B', 15, 15, '{0,7,6}', NULL, NULL),
  ('B', 15, 15, '{3,7,12}', NULL, NULL),
  ('B', 15, 15, '{7,6}', NULL, NULL),
  ('B', 15, 15, '{3,6,12}', NULL, NULL),
  ('B', 15, 15, '{3,6}', NULL, NULL),
  ('B', 15, 15, '{3,11,10}', NULL, NULL),
  ('B', 15, 15, '{3,10}', NULL, NULL),
  ('B', 15, 15, '{3,11}', NULL, NULL),
  ('B', 15, 15, '{3,10,9}', NULL, NULL),
  ('B', 15, 15, '{3,7,6}', NULL, NULL),
  ('B', 15, 15, '{3,6,10}', NULL, NULL),
  ('B', 15, 14, '{3,7}', NULL, NULL),
  ('B', 15, 14, '{1,7}', NULL, NULL),
  ('B', 15, 14, '{3,11}', NULL, NULL),
  ('B', 15, 14, '{7}', NULL, NULL),
  ('B', 15, 14, '{6}', NULL, NULL),
  ('B', 15, 14, '{11}', NULL, NULL),
  ('B', 15, 14, '{3,6,5}', NULL, NULL),
  ('B', 15, 14, '{3,0,6}', NULL, NULL),
  ('B', 15, 14, '{1,7,6}', NULL, NULL),
  ('B', 15, 14, '{3,0,7,6}', NULL, NULL),
  ('B', 15, 14, '{3,7,10,12}', NULL, NULL),
  ('B', 15, 14, '{3,7,10}', NULL, NULL),
  ('B', 15, 14, '{3,7,12}', NULL, NULL),
  ('B', 15, 14, '{7,6}', NULL, NULL),
  ('B', 15, 14, '{3,6,12}', NULL, NULL),
  ('B', 15, 14, '{3,6}', NULL, NULL),
  ('B', 15, 14, '{3,11,10}', NULL, NULL),
  ('B', 15, 14, '{3,10}', NULL, NULL),
  ('B', 15, 14, '{3,11}', NULL, NULL),
  ('B', 15, 14, '{3,10,9}', NULL, NULL),
  ('B', 15, 14, '{3,7,6}', NULL, NULL),
  ('B', 15, 14, '{3,6,10}', NULL, NULL),
  ('B', 15, 14, '{3,1,7,6,12}', NULL, NULL),
  ('D', 15, 15, '{3}', NULL, NULL),
  ('D', 15, 14, '{3}', NULL, NULL),
  ('D', 15, 13, '{3}', NULL, NULL),
  ('D', 15, 15, '{}', NULL, NULL),
  ('D', 15, 14, '{}', NULL, NULL),
  ('D', 15, 13, '{}', NULL, NULL),
  ('P', 15, 11, '{}', NULL, NULL),
  ('P', 15, 11, '{3}', NULL, NULL),
  ('P', 15, 11, '{3,4}', NULL, NULL),
  ('P', 15, 11, '{3,0}', NULL, NULL),
  ('P', 15, 6, '{}', NULL, NULL),
  ('P', 15, 6, '{3}', NULL, NULL),
  ('P', 15, 6, '{3,4}', NULL, NULL),
  ('P', 15, 6, '{3,0}', NULL, NULL),
  ('R', 15, 12, '{}', NULL, NULL),
  ('R', 15, 12, '{7}', NULL, NULL),
  ('R', 15, 12, '{3,7}', NULL, NULL),
  ('R', 15, 12, '{3,4,7}', NULL, NULL),
  ('R', 15, 12, '{3,0,7}', NULL, NULL),
  ('R', 15, 12, '{7,10}', NULL, NULL),
  ('R', 15, 12, '{3,7,10}', NULL, NULL),
  ('R', 15, 12, '{3,4,7,10}', NULL, NULL),
  ('R', 15, 12, '{3,0,7,10}', NULL, NULL),
  ('R', 15, 12, '{3,7,10}', NULL, NULL),
  ('R', 15, 12, '{3,10}', NULL, NULL),
  ('R', 15, 12, '{6}', NULL, NULL),
  ('R', 15, 12, '{10}', NULL, NULL),
  ('R', 15, 12, '{11}', NULL, NULL),
  ('R', 15, 12, '{4,7,6}', NULL, NULL);
